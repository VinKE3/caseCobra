generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

model Configuration {
  id              String        @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  croppedImageUrl String?
  model String?
  color String?
  material String?
  finish String?
  Order           Order[]

}

model CaseColor {
  id              String        @id @default(cuid())
  name            String
  value           String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model PhoneModel {
  id          String    @id @default(cuid())
  name        String
  imageId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  basePrice   Decimal
}

model CaseMaterial {
  id              String        @id @default(cuid())
  name            String
  description String?
  basePrice   Decimal
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model CaseFinish {
  id              String        @id @default(cuid())
  name            String
  description String?
  basePrice   Decimal
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id    String  @id @default(cuid())
  email String
  Order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  isPaid          Boolean       @default(false)
  status          OrderStatus   @default(awaiting_shipment)

  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?

  createdAt DateTime @default(now())
  updated   DateTime @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
